---
/**
 * Renders nothing if the href'd file doesn't exist.
 */

interface Props {
  children: string;
  href: string;
}
const { href } = Astro.props;

import { resolve, dirname } from "path";
import fs from "fs";
import { fileURLToPath } from "url";
const {
  promises: { access },
} = fs;

/**
 * Assumes href is an absolute path to a file in the public/ directory.
 * Relies on `atro` commands being run from the repo root.
 * I'd rather use `import.meta.url`, but this is broken:
 * https://github.com/withastro/astro/issues/5438
 */
function resolveHref(href) {
  return resolve(`public${href}`);
}

let exists = false;
try {
  await access(resolveHref(href));
  exists = true;
} catch (err) {}
---

<style>
  a {
    position: relative;
    margin-left: 1.5em;
  }
  a:before {
    content: "ðŸ“„";
    display: inline-block;
    /* Use absolute positioning to work around whitespace quirk with slots */
    position: absolute;
    left: -1.5em;
    margin-right: 0.2em;
  }
</style>
{
  exists ? (
    <a href={href}>
      <slot />
    </a>
  ) : (
    <span>&mdash;</span>
  )
}
